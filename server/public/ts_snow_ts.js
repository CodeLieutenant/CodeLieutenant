/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktemplate"] = self["webpackChunktemplate"] || []).push([["ts_snow_ts"],{

/***/ "./ts/snow.ts":
/*!********************!*\
  !*** ./ts/snow.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"particlesSnowEffect\": () => /* binding */ particlesSnowEffect\n/* harmony export */ });\n/* harmony import */ var tsparticles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tsparticles */ \"./node_modules/tsparticles/dist/index.js\");\n/* harmony import */ var tsparticles__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tsparticles__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar particlesSnowEffect = function (snowItem) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4 /*yield*/, tsparticles__WEBPACK_IMPORTED_MODULE_0__.tsParticles.load(snowItem, {\n                    particles: {\n                        number: {\n                            value: 100,\n                            density: {\n                                enable: true,\n                                value_area: 800,\n                            },\n                        },\n                        color: {\n                            value: '#ffffff',\n                        },\n                        shape: {\n                            type: 'image',\n                            stroke: {\n                                width: 3,\n                                color: '#fff',\n                            },\n                            polygon: {\n                                nb_sides: 5,\n                            },\n                            image: {\n                                src: '/public/img/snow_flake.png',\n                                width: 100,\n                                height: 100,\n                            },\n                        },\n                        opacity: {\n                            value: 0.7,\n                            random: true,\n                            anim: {\n                                enable: true,\n                                speed: 1,\n                                opacity_min: 0.1,\n                                sync: false,\n                            },\n                        },\n                        size: {\n                            value: 5,\n                            random: true,\n                            anim: {\n                                enable: false,\n                                speed: 20,\n                                size_min: 0.1,\n                                sync: false,\n                            },\n                        },\n                        line_linked: {\n                            enable: false,\n                            distance: 50,\n                            color: '#ffffff',\n                            opacity: 0.6,\n                            width: 1,\n                        },\n                        move: {\n                            enable: true,\n                            speed: 5,\n                            direction: 'bottom',\n                            random: true,\n                            straight: false,\n                            out_mode: 'out',\n                            bounce: false,\n                            attract: {\n                                enable: true,\n                                rotateX: 300,\n                                rotateY: 1200,\n                            },\n                        },\n                    },\n                    retina_detect: true,\n                })];\n            case 1:\n                _a.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n\n\n//# sourceURL=webpack://template/./ts/snow.ts?");

/***/ })

}]);