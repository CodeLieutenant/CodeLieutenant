name: 'Testing'

on:
  push:
    paths:
      - 'api/**'
    branches:
      - master
  pull_request:
    paths:
      - 'api/**'
    branches:
      - master
      - dev

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always


jobs:
  clippy:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
  style:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  build-dist:
    strategy:
      matrix:
        rust:
          - stable
        os:
          - ubuntu-latest
          - windows-latest
        include:
          - rust: stable
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.rust }} on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Build Profile - Dist
        uses: actions-rs/cargo@v1
        id: build
        with:
          command: build
          args: --profile dist --all
  test:
    strategy:
      matrix:
        rust:
          - stable
        os:
          - ubuntu-latest
          - windows-latest
        include:
          - rust: stable
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.rust }} on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust (${{ matrix.rust }})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Build and archive tests
        run: cargo nextest archive --archive-file nextest-archive.tar.zst
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: nextest-archive
          path: nextest-archive.tar.zst
  run-tests-partitioned:
    name: Run tests with partitioning
    runs-on: ubuntu-latest
    needs: [test,style, build-dist, clippy]
    strategy:
      matrix:
        partition: [1, 2]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: mkdir -p ~/.cargo/bin
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Download archive
        uses: actions/download-artifact@v3
        with:
          name: nextest-archive
      - name: Run tests
        run: |
          ~/.cargo/bin/cargo-nextest nextest run --archive-file nextest-archive.tar.zst \
            --partition count:${{ matrix.partition }}/2
